The ``2-matrix_divide`` module
============================

Using ``Divide all elements of a matrix``
-----------------------------------

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Validate cases:

	 >>> matrix =[[1,2,3],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	 >>> matrix =[[1,2,3],[4,5]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
  	 ...
	 TypeError: Each row of the matrix matrix must have the same size
	 >>> matrix =[[1.2,2.4,3.9],[42,5.4,6.6]]
	 >>> matrix_divided(matrix,3)
	 [[0.4, 0.8, 1.3], [14.0, 1.8, 2.2]]
	 >>> matrix =[["hello",2,3],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
  	 ...
	 TypeError: matrix must be a matrix (list of list) of integers/floats
	 >>> matrix =[[1,2,3],[4,5,"seis"]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of list) of integers/floats
	 >>> matrix =[[1,None,3],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
  	 ...
	 TypeError: matrix must be a matrix (list of list) of integers/floats
	 >>> matrix =[[1,(2,3),3],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
 	 ...
	 TypeError: matrix must be a matrix (list of list) of integers/floats
	 >>> matrix =[[1,[2,3],3],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
  	 ...
	 TypeError: matrix must be a matrix (list of list) of integers/floats
	 >>> matrix =[[1,{2:3},3],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
  	 ...
	 TypeError: matrix must be a matrix (list of list) of integers/floats
	 >>> matrix =[[1,2],[4,5,6]]
	 >>> matrix_divided(matrix,3)
	 Traceback (most recent call last):
  	 ...
	 TypeError: Each row of the matrix matrix must have the same size